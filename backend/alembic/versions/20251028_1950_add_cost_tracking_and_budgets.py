"""add_cost_tracking_and_budgets

Revision ID: f06dbda05951
Revises: c7c496c841e7
Create Date: 2025-10-28 19:50:10.809963

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f06dbda05951'
down_revision = 'c7c496c841e7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_budgets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('daily_limit', sa.Float(), nullable=True),
    sa.Column('monthly_limit', sa.Float(), nullable=True),
    sa.Column('daily_spent', sa.Float(), nullable=True),
    sa.Column('monthly_spent', sa.Float(), nullable=True),
    sa.Column('daily_reset_at', sa.DateTime(), nullable=False),
    sa.Column('monthly_reset_at', sa.DateTime(), nullable=False),
    sa.Column('alert_threshold_percent', sa.Integer(), nullable=True),
    sa.Column('alert_sent_daily', sa.DateTime(), nullable=True),
    sa.Column('alert_sent_monthly', sa.DateTime(), nullable=True),
    sa.Column('pause_pipelines_on_exceeded', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_budgets_user_id'), 'user_budgets', ['user_id'], unique=True)
    op.create_table('cost_tracking',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pipeline_id', sa.UUID(), nullable=True),
    sa.Column('execution_id', sa.UUID(), nullable=True),
    sa.Column('agent_type', sa.String(length=100), nullable=False),
    sa.Column('agent_id', sa.String(length=255), nullable=True),
    sa.Column('tokens_input', sa.Integer(), nullable=True),
    sa.Column('tokens_output', sa.Integer(), nullable=True),
    sa.Column('tokens_total', sa.Integer(), nullable=True),
    sa.Column('cost_amount', sa.Float(), nullable=False),
    sa.Column('cost_type', sa.String(length=50), nullable=False),
    sa.Column('api_provider', sa.String(length=100), nullable=True),
    sa.Column('api_model', sa.String(length=100), nullable=True),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('extra_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['execution_id'], ['executions.id'], ),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cost_tracking_agent_type'), 'cost_tracking', ['agent_type'], unique=False)
    op.create_index(op.f('ix_cost_tracking_created_at'), 'cost_tracking', ['created_at'], unique=False)
    op.create_index(op.f('ix_cost_tracking_execution_id'), 'cost_tracking', ['execution_id'], unique=False)
    op.create_index(op.f('ix_cost_tracking_pipeline_id'), 'cost_tracking', ['pipeline_id'], unique=False)
    op.create_index(op.f('ix_cost_tracking_user_id'), 'cost_tracking', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_cost_tracking_user_id'), table_name='cost_tracking')
    op.drop_index(op.f('ix_cost_tracking_pipeline_id'), table_name='cost_tracking')
    op.drop_index(op.f('ix_cost_tracking_execution_id'), table_name='cost_tracking')
    op.drop_index(op.f('ix_cost_tracking_created_at'), table_name='cost_tracking')
    op.drop_index(op.f('ix_cost_tracking_agent_type'), table_name='cost_tracking')
    op.drop_table('cost_tracking')
    op.drop_index(op.f('ix_user_budgets_user_id'), table_name='user_budgets')
    op.drop_table('user_budgets')
    # ### end Alembic commands ###

